
#include <r600/alu_defines.h>

namespace r600 {

const std::map<EAluOp, AluOp> alu_ops = {
   {OP2_ADD                 ,AluOp(2, 1, AluOp::a,"ADD")},
   {OP2_MUL                 ,AluOp(2, 1, AluOp::a,"MUL")},
   {OP2_MUL_IEEE            ,AluOp(2, 1, AluOp::a,"MUL_IEEE")},
   {OP2_MAX                 ,AluOp(2, 1, AluOp::a,"MAX")},
   {OP2_MIN                 ,AluOp(2, 1, AluOp::a,"MIN")},
   {OP2_MAX_DX10            ,AluOp(2, 1, AluOp::a,"MAX_DX10")},
   {OP2_MIN_DX10            ,AluOp(2, 1, AluOp::a,"MIN_DX10")},
   {OP2_SETE                ,AluOp(2, 1, AluOp::a,"SETE")},
   {OP2_SETGT               ,AluOp(2, 1, AluOp::a,"SETGT")},
   {OP2_SETGE               ,AluOp(2, 1, AluOp::a,"SETGE")},
   {OP2_SETNE               ,AluOp(2, 1, AluOp::a,"SETNE")},
   {OP2_SETE_DX10           ,AluOp(2, 1, AluOp::a,"SETE_DX10")},
   {OP2_SETGT_DX10          ,AluOp(2, 1, AluOp::a,"SETGT_DX10")},
   {OP2_SETGE_DX10          ,AluOp(2, 1, AluOp::a,"SETGE_DX10")},
   {OP2_SETNE_DX10          ,AluOp(2, 1, AluOp::a,"SETNE_DX10")},
   {OP2_FRACT               ,AluOp(1, 1, AluOp::a,"FRACT")},
   {OP2_TRUNC               ,AluOp(1, 1, AluOp::a,"TRUNC")},
   {OP2_CEIL                ,AluOp(1, 1, AluOp::a,"CEIL")},
   {OP2_RNDNE               ,AluOp(1, 1, AluOp::a,"RNDNE")},
   {OP2_FLOOR               ,AluOp(1, 1, AluOp::a,"FLOOR")},
   {OP2_ASHR_INT            ,AluOp(2, 0, AluOp::a,"ASHR_INT")},
   {OP2_LSHR_INT            ,AluOp(2, 0, AluOp::a,"LSHR_INT")},
   {OP2_LSHL_INT            ,AluOp(2, 0, AluOp::a,"LSHL_INT")},
   {OP2_MOV                 ,AluOp(1, 0, AluOp::a,"MOV")},
   {OP2_NOP                 ,AluOp(0, 0, AluOp::a,"NOP")},
   {OP2_MUL_64              ,AluOp(2, 1, AluOp::a,"MUL_64")},
   {OP2_FLT64_TO_FLT32      ,AluOp(1, 1, AluOp::a,"FLT64_TO_FLT32")},
   {OP2V_FLT32_TO_FLT64     ,AluOp(1, 1, AluOp::a,"FLT32_TO_FLT64")},
   {OP2_PRED_SETGT_UINT     ,AluOp(2, 0, AluOp::a,"PRED_SETGT_UINT")},
   {OP2_PRED_SETGE_UINT     ,AluOp(2, 0, AluOp::a,"PRED_SETGE_UINT")},
   {OP2_PRED_SETE           ,AluOp(2, 1, AluOp::a,"PRED_SETE")},
   {OP2_PRED_SETGT          ,AluOp(2, 1, AluOp::a,"PRED_SETGT")},
   {OP2_PRED_SETGE          ,AluOp(2, 1, AluOp::a,"PRED_SETGE")},
   {OP2_PRED_SETNE          ,AluOp(2, 1, AluOp::a,"PRED_SETNE")},
   {OP2_PRED_SET_INV        ,AluOp(1, 1, AluOp::a,"PRED_SET_INV")},
   {OP2_PRED_SET_POP        ,AluOp(2, 1, AluOp::a,"PRED_SET_POP")},
   {OP2_PRED_SET_CLR        ,AluOp(0, 1, AluOp::a,"PRED_SET_CLR")},
   {OP2_PRED_SET_RESTORE    ,AluOp(1, 1, AluOp::a,"PRED_SET_RESTORE")},
   {OP2_PRED_SETE_PUSH      ,AluOp(2, 1, AluOp::a,"PRED_SETE_PUSH")},
   {OP2_PRED_SETGT_PUSH     ,AluOp(2, 1, AluOp::a,"PRED_SETGT_PUSH")},
   {OP2_PRED_SETGE_PUSH     ,AluOp(2, 1, AluOp::a,"PRED_SETGE_PUSH")},
   {OP2_PRED_SETNE_PUSH     ,AluOp(2, 1, AluOp::a,"PRED_SETNE_PUSH")},
   {OP2_KILLE               ,AluOp(2, 1, AluOp::a,"KILLE")},
   {OP2_KILLGT              ,AluOp(2, 1, AluOp::a,"KILLGT")},
   {OP2_KILLGE              ,AluOp(2, 1, AluOp::a,"KILLGE")},
   {OP2_KILLNE              ,AluOp(2, 1, AluOp::a,"KILLNE")},
   {OP2_AND_INT             ,AluOp(2, 0, AluOp::a,"AND_INT")},
   {OP2_OR_INT              ,AluOp(2, 0, AluOp::a,"OR_INT")},
   {OP2_XOR_INT             ,AluOp(2, 0, AluOp::a,"XOR_INT")},
   {OP2_NOT_INT             ,AluOp(1, 0, AluOp::a,"NOT_INT")},
   {OP2_ADD_INT             ,AluOp(2, 0, AluOp::a,"ADD_INT")},
   {OP2_SUB_INT             ,AluOp(2, 0, AluOp::a,"SUB_INT")},
   {OP2_MAX_INT             ,AluOp(2, 0, AluOp::a,"MAX_INT")},
   {OP2_MIN_INT             ,AluOp(2, 0, AluOp::a,"MIN_INT")},
   {OP2_MAX_UINT            ,AluOp(2, 0, AluOp::a,"MAX_UINT")},
   {OP2_MIN_UINT            ,AluOp(2, 0, AluOp::a,"MIN_UINT")},
   {OP2_SETE_INT            ,AluOp(2, 0, AluOp::a,"SETE_INT")},
   {OP2_SETGT_INT           ,AluOp(2, 0, AluOp::a,"SETGT_INT")},
   {OP2_SETGE_INT           ,AluOp(2, 0, AluOp::a,"SETGE_INT")},
   {OP2_SETNE_INT           ,AluOp(2, 0, AluOp::a,"SETNE_INT")},
   {OP2_SETGT_UINT          ,AluOp(2, 0, AluOp::a,"SETGT_UINT")},
   {OP2_SETGE_UINT          ,AluOp(2, 0, AluOp::a,"SETGE_UINT")},
   {OP2_KILLGT_UINT         ,AluOp(2, 0, AluOp::a,"KILLGT_UINT")},
   {OP2_KILLGE_UINT         ,AluOp(2, 0, AluOp::a,"KILLGE_UINT")},
   {OP2_PREDE_INT           ,AluOp(2, 0, AluOp::a,"PREDE_INT")},
   {OP2_PRED_SETGT_INT      ,AluOp(2, 0, AluOp::a,"PRED_SETGT_INT")},
   {OP2_PRED_SETGE_INT      ,AluOp(2, 0, AluOp::a,"PRED_SETGE_INT")},
   {OP2_PRED_SETNE_INT      ,AluOp(2, 0, AluOp::a,"PRED_SETNE_INT")},
   {OP2_KILLE_INT           ,AluOp(2, 0, AluOp::a,"KILLE_INT")},
   {OP2_KILLGT_INT          ,AluOp(2, 0, AluOp::a,"KILLGT_INT")},
   {OP2_KILLGE_INT          ,AluOp(2, 0, AluOp::a,"KILLGE_INT")},
   {OP2_KILLNE_INT          ,AluOp(2, 0, AluOp::a,"KILLNE_INT")},
   {OP2_PRED_SETE_PUSH_INT  ,AluOp(2, 0, AluOp::a,"PRED_SETE_PUSH_INT")},
   {OP2_PRED_SETGT_PUSH_INT ,AluOp(2, 0, AluOp::a,"PRED_SETGT_PUSH_INT")},
   {OP2_PRED_SETGE_PUSH_INT ,AluOp(2, 0, AluOp::a,"PRED_SETGE_PUSH_INT")},
   {OP2_PRED_SETNE_PUSH_INT ,AluOp(2, 0, AluOp::a,"PRED_SETNE_PUSH_INT")},
   {OP2_PRED_SETLT_PUSH_INT ,AluOp(2, 0, AluOp::a,"PRED_SETLT_PUSH_INT")},
   {OP2_PRED_SETLE_PUSH_INT ,AluOp(2, 0, AluOp::a,"PRED_SETLE_PUSH_INT")},
   {OP2_FLT_TO_INT          ,AluOp(1, 0, AluOp::a,"FLT_TO_INT")},
   {OP2_BFREV_INT           ,AluOp(1, 0, AluOp::a,"BFREV_INT")},
   {OP2_ADDC_UINT           ,AluOp(2, 0, AluOp::a,"ADDC_UINT")},
   {OP2_SUBB_UINT           ,AluOp(2, 0, AluOp::a,"SUBB_UINT")},
   {OP2_GROUP_BARRIER       ,AluOp(0, 0, AluOp::a,"GROUP_BARRIER")},
   {OP2_GROUP_SEQ_BEGIN     ,AluOp(0, 0, AluOp::a,"GROUP_SEQ_BEGIN")},
   {OP2_GROUP_SEQ_END       ,AluOp(0, 0, AluOp::a,"GROUP_SEQ_END")},
   {OP2_SET_MODE            ,AluOp(2, 0, AluOp::a,"SET_MODE")},
   {OP2_SET_CF_IDX0         ,AluOp(1, 0, AluOp::a,"SET_CF_IDX0")}, /* Reads from AR register? */
   {OP2_SET_CF_IDX1         ,AluOp(1, 0, AluOp::a,"SET_CF_IDX1")}, /* Reads from AR register? */
   {OP2_SET_LDS_SIZE        ,AluOp(2, 0, AluOp::a,"SET_LDS_SIZE")},
   {OP2_EXP_IEEE            ,AluOp(1, 1, AluOp::t,"EXP_IEEE")},
   {OP2_LOG_CLAMPED         ,AluOp(1, 1, AluOp::t,"LOG_CLAMPED")},
   {OP2_LOG_IEEE            ,AluOp(1, 1, AluOp::t,"LOG_IEEE")},
   {OP2_RECIP_CLAMPED       ,AluOp(1, 1, AluOp::t,"RECIP_CLAMPED")},
   {OP2_RECIP_FF            ,AluOp(1, 1, AluOp::t,"RECIP_FF")},
   {OP2_RECIP_IEEE          ,AluOp(1, 1, AluOp::t,"RECIP_IEEE")},
   {OP2_RECIPSQRT_CLAMPED   ,AluOp(1, 1, AluOp::t,"RECIPSQRT_CLAMPED")},
   {OP2_RECIPSQRT_FF        ,AluOp(1, 1, AluOp::t,"RECIPSQRT_FF")},
   {OP2_RECIPSQRT_IEEE      ,AluOp(1, 1, AluOp::t,"RECIPSQRT_IEEE")},
   {OP2_SQRT_IEEE           ,AluOp(1, 1, AluOp::t,"SQRT_IEEE")},
   {OP2_SIN                 ,AluOp(1, 1, AluOp::t,"SIN")},
   {OP2_COS                 ,AluOp(1, 1, AluOp::t,"COS")},
   {OP2_MULLO_INT           ,AluOp(2, 0, AluOp::t,"MULLO_INT")},
   {OP2_MULHI_INT           ,AluOp(2, 0, AluOp::t,"MULHI_INT")},
   {OP2_MULLO_UINT          ,AluOp(2, 0, AluOp::t,"MULLO_UINT")},
   {OP2_MULHI_UINT          ,AluOp(2, 0, AluOp::t,"MULHI_UINT")},
   {OP2_RECIP_INT           ,AluOp(1, 0, AluOp::t,"RECIP_INT")},
   {OP2_RECIP_UINT          ,AluOp(1, 0, AluOp::t,"RECIP_UINT")},
   {OP2_RECIP_64            ,AluOp(1, 1, AluOp::t,"RECIP_64")},
   {OP2_RECIP_CLAMPED_64    ,AluOp(1, 1, AluOp::t,"RECIP_CLAMPED_64")},
   {OP2_RECIPSQRT_64        ,AluOp(1, 1, AluOp::t,"RECIPSQRT_64")},
   {OP2_RECIPSQRT_CLAMPED_64,AluOp(1, 1, AluOp::t,"RECIPSQRT_CLAMPED_64")},
   {OP2_SQRT_64             ,AluOp(1, 1, AluOp::t,"SQRT_64")},
   {OP2_FLT_TO_UINT         ,AluOp(1, 1, AluOp::t,"FLT_TO_UINT")},
   {OP2_INT_TO_FLT          ,AluOp(1, 0, AluOp::t,"INT_TO_FLT")},
   {OP2_UINT_TO_FLT         ,AluOp(1, 0, AluOp::t,"UINT_TO_FLT")},
   {OP2_BFM_INT             ,AluOp(2, 0, AluOp::v,"BFM_INT")},
   {OP2_FLT32_TO_FLT16      ,AluOp(1, 1, AluOp::v,"FLT32_TO_FLT16")},
   {OP2_FLT16_TO_FLT32      ,AluOp(1, 1, AluOp::v,"FLT16_TO_FLT32")},
   {OP2_UBYTE0_FLT          ,AluOp(1, 1, AluOp::v,"UBYTE0_FLT")},
   {OP2_UBYTE1_FLT          ,AluOp(1, 1, AluOp::v,"UBYTE1_FLT")},
   {OP2_UBYTE2_FLT          ,AluOp(1, 1, AluOp::v,"UBYTE2_FLT")},
   {OP2_UBYTE3_FLT          ,AluOp(1, 1, AluOp::v,"UBYTE3_FLT")},
   {OP2_BCNT_INT            ,AluOp(1, 0, AluOp::v,"BCNT_INT")},
   {OP2_FFBH_UINT           ,AluOp(1, 0, AluOp::v,"FFBH_UINT")},
   {OP2_FFBL_INT            ,AluOp(1, 0, AluOp::v,"FFBL_INT")},
   {OP2_FFBH_INT            ,AluOp(1, 0, AluOp::v,"FFBH_INT")},
   {OP2_FLT_TO_UINT4        ,AluOp(1, 1, AluOp::v,"FLT_TO_UINT4")},
   {OP2_DOT_IEEE            ,AluOp(2, 1, AluOp::v,"DOT_IEEE")},
   {OP2_FLT_TO_INT_RPI      ,AluOp(1, 1, AluOp::v,"FLT_TO_INT_RPI")},
   {OP2_FLT_TO_INT_FLOOR    ,AluOp(1, 1, AluOp::v,"FLT_TO_INT_FLOOR")},
   {OP2_MULHI_UINT24        ,AluOp(2, 0, AluOp::v,"MULHI_UINT24")},
   {OP2_MBCNT_32HI_INT      ,AluOp(1, 0, AluOp::v,"MBCNT_32HI_INT")},
   {OP2_OFFSET_TO_FLT       ,AluOp(1, 0, AluOp::v,"OFFSET_TO_FLT")},
   {OP2_MUL_UINT24          ,AluOp(2, 0, AluOp::v,"MUL_UINT24")},
   {OP2_BCNT_ACCUM_PREV_INT ,AluOp(1, 0, AluOp::v,"BCNT_ACCUM_PREV_INT")},
   {OP2_MBCNT_32LO_ACCUM_PREV_INT ,AluOp(1, 0, AluOp::v,"MBCNT_32LO_ACCUM_PREV_INT")},
   {OP2_SETE_64             ,AluOp(2, 1, AluOp::v,"SETE_64")},
   {OP2_SETNE_64            ,AluOp(2, 1, AluOp::v,"SETNE_64")},
   {OP2_SETGT_64            ,AluOp(2, 1, AluOp::v,"SETGT_64")},
   {OP2_SETGE_64            ,AluOp(2, 1, AluOp::v,"SETGE_64")},
   {OP2_MIN_64              ,AluOp(2, 1, AluOp::v,"MIN_64")},
   {OP2_MAX_64              ,AluOp(2, 1, AluOp::v,"MAX_64")},
   {OP2_DOT4                ,AluOp(2, 1, AluOp::v,"DOT4")},
   {OP2_DOT4_IEEE           ,AluOp(2, 1, AluOp::v,"DOT4_IEEE")},
   {OP2_CUBE                ,AluOp(2, 1, AluOp::v,"CUBE")},
   {OP2_MAX4                ,AluOp(1, 1, AluOp::v,"MAX4")},
   {OP2_FREXP_64            ,AluOp(1, 1, AluOp::v,"FREXP_64")},
   {OP2_LDEXP_64            ,AluOp(1, 1, AluOp::v,"LDEXP_64")},
   {OP2_FRACT_64            ,AluOp(1, 1, AluOp::v,"FRACT_64")},
   {OP2_PRED_SETGT_64       ,AluOp(2, 1, AluOp::v,"PRED_SETGT_64")},
   {OP2_PRED_SETE_64        ,AluOp(2, 1, AluOp::v,"PRED_SETE_64")},
   {OP2_PRED_SETGE_64       ,AluOp(2, 1, AluOp::v,"PRED_SETGE_64")},
   {OP2V_MUL_64             ,AluOp(2, 1, AluOp::v,"MUL_64")},
   {OP2_ADD_64              ,AluOp(2, 1, AluOp::v,"ADD_64")},
   {OP2_MOVA_INT            ,AluOp(1, 0, AluOp::v,"MOVA_INT")},
   {OP2V_FLT64_TO_FLT32     ,AluOp(1, 1, AluOp::v,"FLT64_TO_FLT32")},
   {OP2_FLT32_TO_FLT64      ,AluOp(1, 1, AluOp::v,"FLT32_TO_FLT64")},
   {OP2_SAD_ACCUM_PREV_UINT ,AluOp(2, 0, AluOp::v,"SAD_ACCUM_PREV_UINT")},
   {OP2_DOT                 ,AluOp(2, 1, AluOp::v,"DOT")},
   {OP2_MUL_PREV            ,AluOp(2, 1, AluOp::v,"MUL_PREV")},
   {OP2_MUL_IEEE_PREV       ,AluOp(2, 1, AluOp::v,"MUL_IEEE_PREV")},
   {OP2_ADD_PREV            ,AluOp(2, 1, AluOp::v,"ADD_PREV")},
   {OP2_MULADD_PREV         ,AluOp(2, 1, AluOp::v,"MULADD_PREV")},
   {OP2_MULADD_IEEE_PREV    ,AluOp(2, 1, AluOp::v,"MULADD_IEEE_PREV")},
   {OP2_INTERP_XY           ,AluOp(1, 1, AluOp::v,"INTERP_XY")},
   {OP2_INTERP_ZW           ,AluOp(1, 1, AluOp::v,"INTERP_ZW")},
   {OP2_INTERP_X            ,AluOp(1, 1, AluOp::v,"INTERP_X")},
   {OP2_INTERP_Z            ,AluOp(1, 1, AluOp::v,"INTERP_Z")},
   {OP2_STORE_FLAGS         ,AluOp(0, 0, AluOp::v,"STORE_FLAGS")},
   {OP2_LOAD_STORE_FLAGS    ,AluOp(1, 0, AluOp::v,"LOAD_STORE_FLAGS")},
   {OP2_LDS_1A              ,AluOp(0, 0, AluOp::v,"LDS_1A")},
   {OP2_LDS_1A1D            ,AluOp(0, 0, AluOp::v,"LDS_1A1D")},
   {OP2_LDS_2A              ,AluOp(0, 0, AluOp::v,"LDS_2A")},
   {OP2_INTERP_LOAD_P0      ,AluOp(1, 1, AluOp::v,"INTERP_LOAD_P0")},
   {OP2_INTERP_LOAD_P10     ,AluOp(1, 1, AluOp::v,"INTERP_LOAD_P10")},
   {OP2_INTERP_LOAD_P20     ,AluOp(1, 1, AluOp::v,"INTERP_LOAD_P20")},
   {OP3_BFE_UINT            ,AluOp(3, 0, AluOp::v,"BFE_UINT")},
   {OP3_BFE_INT        ,AluOp(3, 0, AluOp::v,"BFE_INT")},
   {OP3_BFI_INT        ,AluOp(3, 0, AluOp::v,"BFI_INT")},
   {OP3_FMA            ,AluOp(3, 1, AluOp::v,"FMA")},
   {OP3_CNDNE_64       ,AluOp(3, 1, AluOp::v,"CNDNE_64")},
   {OP3_FMA_64         ,AluOp(3, 1, AluOp::v,"FMA_64")},
   {OP3_LERP_UINT      ,AluOp(3, 0, AluOp::v,"LERP_UINT")},
   {OP3_BIT_ALIGN_INT  ,AluOp(3, 0, AluOp::v,"BIT_ALIGN_INT")},
   {OP3_BYTE_ALIGN_INT ,AluOp(3, 0, AluOp::v,"BYTE_ALIGN_INT")},
   {OP3_SAD_ACCUM_UINT ,AluOp(3, 0, AluOp::v,"SAD_ACCUM_UINT")},
   {OP3_SAD_ACCUM_HI_UINT ,AluOp(3, 0, AluOp::v,"SAD_ACCUM_HI_UINT")},
   {OP3_MULADD_UINT24  ,AluOp(3, 0, AluOp::v,"MULADD_UINT24")},
   {OP3_LDS_IDX_OP     ,AluOp(3, 0, AluOp::x,"LDS_IDX_OP")},
   {OP3_MULADD         ,AluOp(3, 1, AluOp::a,"MULADD")},
   {OP3_MULADD_M2      ,AluOp(3, 1, AluOp::a,"MULADD_M2")},
   {OP3_MULADD_M4      ,AluOp(3, 1, AluOp::a,"MULADD_M4")},
   {OP3_MULADD_D2      ,AluOp(3, 1, AluOp::a,"MULADD_D2")},
   {OP3_MULADD_IEEE    ,AluOp(3, 1, AluOp::a,"MULADD_IEEE")},
   {OP3_CNDE           ,AluOp(3, 1, AluOp::a,"CNDE")},
   {OP3_CNDGT          ,AluOp(3, 1, AluOp::a,"CNDGT")},
   {OP3_CNDGE          ,AluOp(3, 1, AluOp::a,"CNDGE")},
   {OP3_CNDE_INT       ,AluOp(3, 0, AluOp::a,"CNDE_INT")},
   {OP3_CNDGT_INT      ,AluOp(3, 0, AluOp::a,"CNDGT_INT")},
   {OP3_CNDGE_INT      ,AluOp(3, 0, AluOp::a,"CNDGE_INT")},
   {OP3_MUL_LIT        ,AluOp(3, 1, AluOp::t,"MUL_LIT")}
};

const std::map<AluInlineConstants, AluInlineConstantDescr> alu_src_const = {
   {ALU_SRC_LDS_OQ_A, {false, "LDS_OQ_A"}},
   {ALU_SRC_LDS_OQ_B, {false, "LDS_OQ_B"}},
   {ALU_SRC_LDS_OQ_A_POP, {false, "LDS_OQ_A_POP"}},
   {ALU_SRC_LDS_OQ_B_POP, {false, "LDS_OQ_B_POP"}},
   {ALU_SRC_LDS_DIRECT_A, {false, "LDS_DIRECT_A"}},
   {ALU_SRC_LDS_DIRECT_B, {false, "LDS_DIRECT_B"}},
   {ALU_SRC_TIME_HI, {false, "TIME_HI"}},
   {ALU_SRC_TIME_LO, {false, "TIME_LO"}},
   {ALU_SRC_MASK_HI, {false, "MASK_HI"}},
   {ALU_SRC_MASK_LO, {false, "MASK_LO"}},
   {ALU_SRC_HW_WAVE_ID, {false, "HW_WAVE_ID"}},
   {ALU_SRC_SIMD_ID, {false, "SIMD_ID"}},
   {ALU_SRC_SE_ID, {false, "SE_ID"}},
   {ALU_SRC_HW_THREADGRP_ID, {false, "HW_THREADGRP_ID"}},
   {ALU_SRC_WAVE_ID_IN_GRP, {false, "WAVE_ID_IN_GRP"}},
   {ALU_SRC_NUM_THREADGRP_WAVES, {false, "NUM_THREADGRP_WAVES"}},
   {ALU_SRC_HW_ALU_ODD, {false, "HW_ALU_ODD"}},
   {ALU_SRC_LOOP_IDX, {false, "LOOP_IDX"}},
   {ALU_SRC_PARAM_BASE_ADDR, {false, "PARAM_BASE_ADDR"}},
   {ALU_SRC_NEW_PRIM_MASK, {false, "NEW_PRIM_MASK"}},
   {ALU_SRC_PRIM_MASK_HI, {false, "PRIM_MASK_HI"}},
   {ALU_SRC_PRIM_MASK_LO, {false, "PRIM_MASK_LO"}},
   {ALU_SRC_1_DBL_L, {false, "1.0L"}},
   {ALU_SRC_1_DBL_M, {false, "1.0H"}},
   {ALU_SRC_0_5_DBL_L, {false, "0.5L"}},
   {ALU_SRC_0_5_DBL_M, {false, "0.5H"}},
   {ALU_SRC_0, {false, "0"}},
   {ALU_SRC_1, {false, "1.0"}},
   {ALU_SRC_1_INT, {false, "1"}},
   {ALU_SRC_M_1_INT, {false, "-1"}},
   {ALU_SRC_0_5, {false, "0.5"}},
   {ALU_SRC_LITERAL, {true, "ALU_SRC_LITERAL"}},
   {ALU_SRC_PV, {true, "PV"}},
   {ALU_SRC_PS, {false, "PS"}}
};

const std::map<ELSDIndexOp, LDSOp> lds_ops = {
   {LDS_OP_ADD           , {2, "LDS_ADD"}},
   {LDS_OP_SUB           , {2, "LDS_SUB"}},
   {LDS_OP_RSUB          , {2, "LDS_RSUB"}},
   {LDS_OP_INC           , {2, "LDS_INC"}},
   {LDS_OP_DEC           , {2, "LDS_DEC"}},
   {LDS_OP_MIN_INT       , {2, "LDS_MIN_INT"}},
   {LDS_OP_MAX_INT       , {2, "LDS_MAX_INT"}},
   {LDS_OP_MIN_UINT      , {2, "LDS_MIN_UINT"}},
   {LDS_OP_MAX_UINT      , {2, "LDS_MAX_UINT"}},
   {LDS_OP_AND           , {2, "LDS_AND"}},
   {LDS_OP_OR            , {2, "LDS_OR"}},
   {LDS_OP_XOR           , {2, "LDS_XOR"}},
   {LDS_OP_MSKOR         , {3, "LDS_MSKOR"}},
   {LDS_OP_WRITE         , {2, "LDS_WRITE"}},
   {LDS_OP_WRITE_REL     , {3, "LDS_WRITE_REL"}},
   {LDS_OP_WRITE2        , {3, "LDS_WRITE2"}},
   {LDS_OP_CMP_STORE     , {3, "LDS_CMP_STORE"}},
   {LDS_OP_CMP_STORE_SPF , {3, "LDS_CMP_STORE_SPF"}},
   {LDS_OP_BYTE_WRITE    , {2, "LDS_BYTE_WRITE"}},
   {LDS_OP_SHORT_WRITE   , {2, "LDS_SHORT_WRITE"}},
   {LDS_OP_ADD_RET       , {2, "LDS_ADD_RET"}},
   {LDS_OP_SUB_RET       , {2, "LDS_SUB_RET"}},
   {LDS_OP_RSUB_RET      , {2, "LDS_RSUB_RET"}},
   {LDS_OP_INC_RET       , {2, "LDS_INC_RET"}},
   {LDS_OP_DEC_RET       , {2, "LDS_DEC_RET"}},
   {LDS_OP_MIN_INT_RET   , {2, "LDS_MIN_INT_RET"}},
   {LDS_OP_MAX_INT_RET   , {2, "LDS_MAX_INT_RET"}},
   {LDS_OP_MIN_UINT_RET  , {2, "LDS_MIN_UINT_RET"}},
   {LDS_OP_MAX_UINT_RET  , {2, "LDS_MAX_UINT_RET"}},
   {LDS_OP_AND_RET       , {2, "LDS_AND_RET"}},
   {LDS_OP_OR_RET        , {2, "LDS_OR_RET"}},
   {LDS_OP_XOR_RET       , {2, "LDS_XOR_RET"}},
   {LDS_OP_MSKOR_RET     , {3, "LDS_MSKOR_RET"}},
   {LDS_OP_XCHG_RET      , {2, "LDS_XCHG_RET"}},
   {LDS_OP_XCHG_REL_RET  , {3, "LDS_XCHG_REL_RET"}},
   {LDS_OP_XCHG2_RET     , {3, "LDS_XCHG2_RET"}},
   {LDS_OP_CMP_XCHG_RET  , {3, "LDS_CMP_XCHG_RET"}},
   {LDS_OP_CMP_XCHG_SPF_RET, {3, "LDS_CMP_XCHG_SPF_RET"}},
   {LDS_OP_READ_RET      , {1, "LDS_READ_RET"}},
   {LDS_OP_READ_REL_RET  , {1, "LDS_READ_REL_RET"}},
   {LDS_OP_READ2_RET     , {2, "LDS_READ2_RET"}},
   {LDS_OP_READWRITE_RET , {3, "LDS_READWRITE_RET"}},
   {LDS_OP_BYTE_READ_RET , {1, "LDS_BYTE_READ_RET"}},
   {LDS_OP_UBYTE_READ_RET, {1, "LDS_UBYTE_READ_RET"}},
   {LDS_OP_SHORT_READ_RET, {1, "LDS_SHORT_READ_RET"}},
   {LDS_OP_USHORT_READ_RET, {1, "LDS_USHORT_READ_RET"}},
   {LDS_OP_ATOMIC_ORDERED_ALLOC_RET , {3, "LDS_ATOMIC_ORDERED_ALLOC_RET"}}
};

}